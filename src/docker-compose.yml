version: "2.1"

services:

  ##################
  #   PRODUCTION   #
  ##################

  code:
    image: tianon/true
    volumes:
      - ${HOST_CODE_DIR:-./}:${CONTAINER_CODE_DIR:-/var/www}
    networks:
      - app_network

  cache:
    build: ${CACHE_IMAGE_BUILD_CONTEXT:-./docker/cache/redis/build}
    image: ${CACHE_IMAGE:-redis:latest}
    healthcheck:
      test: "exit 0"
    networks:
      - app_network

  cron-jobs:
    build: ${CRON_JOBS_IMAGE_BUILD_CONTEXT:-./docker/cron-jobs/php7-fpm/build}
    image: ${CRON_JOBS_IMAGE:-exadra37/php7-fpm:latest}
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_healthy
      logger:
        condition: service_healthy
      queue:
        condition: service_healthy
    volumes_from:
      - code
    networks:
      - app_network

  database:
    build: ${DATABASE_IMAGE_BUILD_CONTEXT:-./docker/database/percona/build}
    image: ${DATABASE_IMAGE:-percona:latest}
    healthcheck:
      test: "exit 0"
    volumes:
      - ${DATABASE_VOLUME_MAP:-data:/var/lib/mysql}
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD:-rootsecret}
      MYSQL_DATABASE: ${DB_DATABASE:-dockerstack}
      MYSQL_USER: ${DB_USERNAME:-dockerstack}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    networks:
      - app_network

  http:
    build: ${HTTP_IMAGE_BUILD_CONTEXT:-./docker/http/nginx/build}
    image: ${HTTP_IMAGE:-exadra37/nginx:latest}
    ports:
      - ${HTTP_PORT_MAP:-80:80}
    depends_on:
      php:
        condition: service_healthy
    volumes_from:
      - code
    networks:
      - app_network

  logger:
    image: ${LOGGER_IMAGE:-elasticsearch:latest}
    healthcheck:
      test: "exit 0"
    networks:
      - app_network

  php:
    build: ${PHP_IMAGE_BUILD_CONTEXT:-./docker/php/php7-fpm/build}
    image: ${PHP_IMAGE:-exadra37/php7-fpm:latest}
    working_dir: ${CONTAINER_CODE_DIR:-/var/www}
    expose:
      - 9000
    healthcheck:
      test: "exit 0"
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_healthy
      logger:
        condition: service_healthy
      queue:
        condition: service_healthy

    volumes_from:
      - code
    networks:
      - app_network

  queue:
    build: ${QUEUE_IMAGE_BUILD_CONTEXT:-./docker/queue/beanstalkd/build}
    image: ${QUEUE_IMAGE:-schickling/beanstalkd:latest}
    healthcheck:
      test: "exit 0"
    volumes_from:
      - code
    networks:
      - app_network


  ###################
  #   DEVELOPMENT   #
  ###################

  dev-cli:
    build: ${DEV_CLI_IMAGE_BUILD_CONTEXT:-./docker/dev-cli/php7/build}
    image: ${DEV_CLI_IMAGE:-exadra37/php7-dev-cli:latest}
    working_dir: ${CONTAINER_CODE_DIR:-/var/www}
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_healthy
      logger:
        condition: service_healthy
      queue:
        condition: service_healthy
    volumes_from:
      - code
    networks:
      - app_network

networks:
  app_network:
    driver: "bridge"

volumes:
  data:
    driver: "local"
