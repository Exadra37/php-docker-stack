version: "2"

services:

  ##################
  #   PRODUCTION   #
  ##################

  app_code:
    image: tianon/true
    volumes:
      - ${APP_CODE_VOLUME_MAP}
    networks:
      - app_network

  app_cache:
    image: ${APP_CACHE_IMAGE}
    networks:
      - app_network
  
  cron_job:
    image: ${CRON_JOB_IMAGE}
    depends_on: 
      - php
      - queue
      - logger
    volumes_from: 
      - app_code
    networks: 
      - app_network
  
  database:
    image: ${DATABASE_IMAGE}
    volumes:
      - ${DATABASE_VOLUME_MAP}
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    networks:
      - app_network

  http:
    image: ${HTTP_IMAGE}
    ports:
      - ${HTTP_PORT_MAP}
    depends_on:
      - php
    volumes_from:
      - app_code
    volumes:
      - ${HTTP_CONFIG_VOLUMES_MAP}
    networks:
      - app_network
  
  # load_balancer:
  #   image: ${LOAD_BALANCER_IMAGE}
  #   networks: 
  #     - app_network
      
  logger:
    image: ${LOGGER_IMAGE}
    networks: 
      - app_network

  php:
    image: ${PHP_IMAGE}
    expose:
      - 9000
    depends_on:
      - database
      - app_cache
      - queue
    volumes_from:
      - app_code
    networks:
      - app_network
  
  queue:
    image: ${QUEUE_IMAGE}
    volumes_from: 
      - app_code
    networks: 
      - app_network

  

  ###################
  #   DEVELOPMENT   #
  ###################

  dev_cli:
    image: ${DEV_CLI_IMAGE}
    depends_on:
      - database
    volumes_from: 
      - app_code
    networks: 
      - app_network


networks:
  app_network:
    driver: "bridge"

volumes:
  data:
    driver: "local"
